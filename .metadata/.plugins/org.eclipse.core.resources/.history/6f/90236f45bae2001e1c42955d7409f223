package my.com.cmg.iwp.backend.model.inventory.penalty;

// Generated May 21, 2015 10:21:47 AM by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

import my.com.cmg.iwp.maintenance.model.BaseEntity;
import my.com.cmg.iwp.maintenance.model.SecUser;
import my.com.cmg.iwp.webui.constant.RefCodeConstant;
import my.com.cmg.iwp.webui.inventory.penalty.PenaltyConstants;

/**
 * TPenaltyPayment generated by hbm2java
 */
@Entity
@Table(name = "T_PENALTY_PAYMENT")
@JsonIgnoreProperties(ignoreUnknown=true)
public class PenaltyPayment implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	private long penaltyPaymentSeqno;
	private String paymentTransactionNumber;
	private String paymentMode;
	private String voucherNumber;
	private String chequeNumber;
	private String status;
	private String bankName;
	private String chequeRefNo;
	private Double chequeAmt;
	private String remarks;
	private PenaltyVerificationHdr penaltyVerificationHdr;
	private Long verifyHdrSeqno;
	private String hospitalCode;
	private String ptjCode;
	private Long approvedBy; 
	private SecUser approvedByUser;
	private Date approvedDate;
	private String sendFlag;
	public PenaltyPayment() {
	}

		
	public PenaltyPayment(SecUser loginUser) {
		setCreatedBy( loginUser.getId());
		setCreatedUser(loginUser);
		setCreatedDate( new Date());
		
		setUpdatedBy( loginUser.getId());
		setUpdatedUser(loginUser);
		setUpdatedDate( new Date());
		setActiveFlag( RefCodeConstant.ACTIVE_FLAG_TRUE);
		setStatus( PenaltyConstants.PENALTY_PAYMENT_STATUS_OPEN );
	}

	@Id
	@Column(name = "PENALTY_PAYMENT_SEQNO", unique = true, nullable = false, precision = 22, scale = 0)
	@SequenceGenerator(name = "T_PENALTY_PAYMENT_SEQ", sequenceName = "T_PENALTY_PAYMENT_SEQ", allocationSize  = 1)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "T_PENALTY_PAYMENT_SEQ")
	public long getPenaltyPaymentSeqno() {
		return this.penaltyPaymentSeqno;
	}

	public void setPenaltyPaymentSeqno(long TPenaltyPaymentSeqno) {
		this.penaltyPaymentSeqno = TPenaltyPaymentSeqno;
	}

	@Column(name = "PAYMENT_TRX_NUMBER", length = 1000)
	public String getPaymentTransactionNumber() {
		return this.paymentTransactionNumber;
	}

	public void setPaymentTransactionNumber(String TPenaltyPayment) {
		this.paymentTransactionNumber = TPenaltyPayment;
	}

	@Column(name = "PAYMENT_MODE", length = 1000)
	public String getPaymentMode() {
		return this.paymentMode;
	}

	public void setPaymentMode(String TPaymentMode) {
		this.paymentMode = TPaymentMode;
	}

	@Column(name = "VOUCHER_NUMBER", length = 1000)
	public String getVoucherNumber() {
		return this.voucherNumber;
	}

	public void setVoucherNumber(String TVoucherNumber) {
		this.voucherNumber = TVoucherNumber;
	}

	@Column(name = "CHEQUE_NUMBER", length = 1000)
	public String getChequeNumber() {
		return this.chequeNumber;
	}

	public void setChequeNumber(String TChequeNumber) {
		this.chequeNumber = TChequeNumber;
	}

	@Column(name = "STATUS", length = 1)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String TStatus) {
		this.status = TStatus;
	}

	@Column(name = "BANK_NAME", length = 1000)
	public String getBankName() {
		return this.bankName;
	}

	public void setBankName(String TBankName) {
		this.bankName = TBankName;
	}

	@Column(name = "CHEQUE_REF_NO", length = 1000)
	public String getChequeRefNo() {
		return this.chequeRefNo;
	}

	public void setChequeRefNo(String TChequeRefNo) {
		this.chequeRefNo = TChequeRefNo;
	}

	@Column(name = "CHEQUE_AMT", length = 1000)
	public Double getChequeAmt() {
		return this.chequeAmt;
	}

	public void setChequeAmt(Double TChequeAmt) {
		this.chequeAmt = TChequeAmt;
	}

	@Column(name = "REMARKS", length = 1000)
	public String getRemarks() {
		return this.remarks;
	}

	public void setRemarks(String TRemarks) {
		this.remarks = TRemarks;
	}

	@ManyToOne(fetch=FetchType.LAZY)
	@JoinColumn(name="VERIFY_HDR_SEQNO")
	public PenaltyVerificationHdr getPenaltyVerificationHdr() {
		return penaltyVerificationHdr;
	}

	public void setPenaltyVerificationHdr(PenaltyVerificationHdr penaltyVerification) {
		this.penaltyVerificationHdr = penaltyVerification;
	}

	@Column(name = "VERIFY_HDR_SEQNO", insertable=false, updatable=false)
	public Long getVerifyHdrSeqno() {
		return this.verifyHdrSeqno;
	}

	public void setVerifyHdrSeqno(Long TPenaltyVerifySeqno) {
		this.verifyHdrSeqno = TPenaltyVerifySeqno;
	}

	@Column(name = "HOSPITAL_CODE", length = 200)
	public String getHospitalCode() {
		return this.hospitalCode;
	}

	public void setHospitalCode(String THospitalCode) {
		this.hospitalCode = THospitalCode;
	}

	@Column(name = "PTJ_CODE", length = 200)
	public String getPtjCode() {
		return this.ptjCode;
	}

	public void setPtjCode(String TPtjCode) {
		this.ptjCode = TPtjCode;
	}
	
	private String parameter1;
	private String parameter2;
	private BigDecimal parameter3;
	private BigDecimal parameter4;
	private Date parameter5;
	private Character activeFlag = 'A';
	private long createdBy;
	private Date createdDate;
	private Long updatedBy;
	private Date updatedDate;

	private SecUser updatedUser;

	private SecUser createdUser;
	
	@Column(name = "parameter1", length = 100)
	public String getParameter1() {
		return this.parameter1;
	}

	public void setParameter1(String parameter1) {
		this.parameter1 = parameter1;
	}

	@Column(name = "parameter2", length = 100)
	public String getParameter2() {
		return this.parameter2;
	}

	public void setParameter2(String parameter2) {
		this.parameter2 = parameter2;
	}

	@Column(name = "parameter3")
	public BigDecimal getParameter3() {
		return this.parameter3;
	}

	public void setParameter3(BigDecimal parameter3) {
		this.parameter3 = parameter3;
	}

	@Column(name = "parameter4")
	public BigDecimal getParameter4() {
		return this.parameter4;
	}

	public void setParameter4(BigDecimal parameter4) {
		this.parameter4 = parameter4;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "parameter5", length = 13)
	public Date getParameter5() {
		return this.parameter5;
	}

	public void setParameter5(Date parameter5) {
		this.parameter5 = parameter5;
	}

	@Column(name = "active_flag", nullable = false)
	public Character getActiveFlag() {
		return this.activeFlag;
	}

	public void setActiveFlag(Character activeFlag) {
		this.activeFlag = activeFlag;
	}

	@Column(name = "created_by", nullable = false)
	public long getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(long createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_date", nullable = false, length = 29)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Column(name = "updated_by")
	public Long getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(Long updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_date", length = 29)
	public Date getUpdatedDate() {
		return this.updatedDate;
	}

	public void setUpdatedDate(Date updatedDate) {
		this.updatedDate = updatedDate;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "created_by", insertable = false, updatable = false)
	@JsonIgnore
	public SecUser getCreatedUser() {
		return this.createdUser;
	}

	public void setCreatedUser(SecUser createdUser) {
		this.createdUser = createdUser;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "updated_by", insertable = false, updatable = false)
	@JsonIgnore
	public SecUser getUpdatedUser() {
		return this.updatedUser;
	}

	public void setUpdatedUser(SecUser updatedUser) {
		this.updatedUser = updatedUser;
	}


	@Column(name = "APPROVED_BY")
	public Long getApprovedBy() {
		return approvedBy;
	}


	public void setApprovedBy(Long approvedBy) {
		this.approvedBy = approvedBy;
	}


	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "APPROVED_BY", insertable = false, updatable = false)
	@JsonIgnore
	public SecUser getApprovedByUser() {
		return approvedByUser;
	}


	public void setApprovedByUser(SecUser approvedByUser) {
		this.approvedByUser = approvedByUser;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "APPROVED_DATE", length = 29)
	public Date getApprovedDate() {
		return approvedDate;
	}


	public void setApprovedDate(Date approvedDate) {
		this.approvedDate = approvedDate;
	}
	
	@Column(name = "send_flag")
	public String getSendFlag() {
		return sendFlag;
	}

	public void setSendFlag(String sendFlag) {
		this.sendFlag = sendFlag;
	}
}
