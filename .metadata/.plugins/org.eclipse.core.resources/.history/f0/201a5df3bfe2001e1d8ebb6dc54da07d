package my.com.cmg.iwp.maintenance.model;

import java.beans.Transient;
import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import my.com.cmg.iwp.webui.constant.RefCodeConstant;
/**
 * PhCurrentBudgetMaster generated by hbm2java
 */
@Entity
@Table(name = "t_current_budget_master")
public class CBMaster implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 5931089949629128745L;
	/**
	 * 
	 */

	private Long cbMstrSeqno;
	private VoteCode voteCode;
	private String ptjCode;
	private String facilityCode;
	private String budgetType;
	private Double currentActualAmount;
	private Double currentPendingAmount;
	private Double currentUtilizedAmount;
	private Double currentLiabilityAmount;
	private Double openingActualAmount;
	private Double openingPendingAmount;
	private Double openingUtilizedAmount;
	private Double openingLiabilityAmount;
	private Integer financialYear;
	private char activeFlag = RefCodeConstant.ACTIVE_FLAG_TRUE;
	private String parameter1;
	private String parameter2;
	private BigDecimal parameter3;
	private BigDecimal parameter4;
	private Date parameter5;
	private long createdBy;
	private Date createdDate;
	private Long updatedBy;
	private Date updatedDate;
	private Double transactionAmtFirst;
	private Double transactionAmtAddition;
	private Long voteSeqno;
	
	private Set<BudgetTransfer> budgetTransfersForTransferFromSeqnos = new HashSet<BudgetTransfer>(0);
	private Set<BudgetTransfer> currentBudgetMasterByTransferToSeqno = new HashSet<BudgetTransfer>(0);
	private Set<BudgetAllocationDeduction> budgetAllocationDeductionshq = new HashSet<BudgetAllocationDeduction>(0);
	private Set<PoDtl> poDtl = new HashSet<PoDtl>(0);

	@Id
	@Column(name = "CB_MSTR_SEQNO", unique = true, nullable = false)
	@SequenceGenerator(name = "budget_master_seq", sequenceName = "t_current_budget_master_seq", allocationSize = 1)
	@GeneratedValue(generator = "budget_master_seq")
	public Long getCbMstrSeqno() {
		return cbMstrSeqno;
	}

	public void setCbMstrSeqno(Long cbMstrSeqno) {
		this.cbMstrSeqno = cbMstrSeqno;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "vote_seqno", nullable = false, insertable=true, updatable=true)
	public VoteCode getVoteCode() {
		return voteCode;
	}

	public void setVoteCode(VoteCode voteCode) {
		this.voteCode = voteCode;
	}

	@Column(name="vote_seqno", insertable=false, updatable=false)
	public Long getVoteSeqno() {
		return voteSeqno;
	}

	public void setVoteSeqno(Long voteSeqno) {
		this.voteSeqno = voteSeqno;
	}

	@Column(name = "source_ptj_code", length = 20, nullable = false)
	public String getPtjCode() {
		return ptjCode;
	}

	public void setPtjCode(String ptjCode) {
		this.ptjCode = ptjCode;
	}

	@Column(name = "facility_code", length = 20)
	public String getFacilityCode() {
		return facilityCode;
	}

	public void setFacilityCode(String facilityCode) {
		this.facilityCode = facilityCode;
	}
	
	@Column(name = "budget_type", length = 20)
	public String getBudgetType() {
		return this.budgetType;
	}
	
	public void setBudgetType(String budgetType) {
		this.budgetType = budgetType;
	}

	@Column(name = "current_actual_amount", precision = 16, scale = 4)
	public Double getCurrentActualAmount() {
		return this.currentActualAmount;
	}

	public void setCurrentActualAmount(Double currentActualAmount) {
		this.currentActualAmount = currentActualAmount;
	}

	@Column(name = "current_pending_amount", precision = 16, scale = 4)
	public Double getCurrentPendingAmount() {
		return this.currentPendingAmount;
	}

	public void setCurrentPendingAmount(Double currentPendingAmount) {
		this.currentPendingAmount = currentPendingAmount;
	}

	@Column(name = "current_utilized_amount", precision = 16, scale = 4)
	public Double getCurrentUtilizedAmount() {
		return this.currentUtilizedAmount;
	}

	public void setCurrentUtilizedAmount(Double currentUtilizedAmount) {
		this.currentUtilizedAmount = currentUtilizedAmount;
	}

	@Column(name = "current_liability_amount", precision = 16, scale = 4)
	public Double getCurrentLiabilityAmount() {
		return this.currentLiabilityAmount;
	}

	public void setCurrentLiabilityAmount(Double currentLiabilityAmount) {
		this.currentLiabilityAmount = currentLiabilityAmount;
	}

	@Column(name = "opening_actual_amount", precision = 16, scale = 4)
	public Double getOpeningActualAmount() {
		return this.openingActualAmount;
	}

	public void setOpeningActualAmount(Double openingActualAmount) {
		this.openingActualAmount = openingActualAmount;
	}

	@Column(name = "opening_pending_amount", precision = 16, scale = 4)
	public Double getOpeningPendingAmount() {
		return this.openingPendingAmount;
	}

	public void setOpeningPendingAmount(Double openingPendingAmount) {
		this.openingPendingAmount = openingPendingAmount;
	}

	@Column(name = "opening_utilized_amount", precision = 16, scale = 4)
	public Double getOpeningUtilizedAmount() {
		return this.openingUtilizedAmount;
	}

	public void setOpeningUtilizedAmount(Double openingUtilizedAmount) {
		this.openingUtilizedAmount = openingUtilizedAmount;
	}

	@Column(name = "opening_liability_amount", precision = 16, scale = 4)
	public Double getOpeningLiabilityAmount() {
		return this.openingLiabilityAmount;
	}

	public void setOpeningLiabilityAmount(Double openingLiabilityAmount) {
		this.openingLiabilityAmount = openingLiabilityAmount;
	}

	@Column(name = "financial_year")
	public Integer getFinancialYear() {
		return this.financialYear;
	}

	public void setFinancialYear(Integer financialYear) {
		this.financialYear = financialYear;
	}

	@Column(name = "active_flag", nullable = false, length = 1)
	public char getActiveFlag() {
		return this.activeFlag;
	}

	public void setActiveFlag(char activeFlag) {
		this.activeFlag = activeFlag;
	}

	@Column(name = "parameter1", length = 100)
	public String getParameter1() {
		return this.parameter1;
	}

	public void setParameter1(String parameter1) {
		this.parameter1 = parameter1;
	}

	@Column(name = "parameter2", length = 100)
	public String getParameter2() {
		return this.parameter2;
	}

	public void setParameter2(String parameter2) {
		this.parameter2 = parameter2;
	}

	@Column(name = "parameter3", precision = 8, scale = 4)
	public BigDecimal getParameter3() {
		return this.parameter3;
	}

	public void setParameter3(BigDecimal parameter3) {
		this.parameter3 = parameter3;
	}

	@Column(name = "parameter4", precision = 8, scale = 4)
	public BigDecimal getParameter4() {
		return this.parameter4;
	}

	public void setParameter4(BigDecimal parameter4) {
		this.parameter4 = parameter4;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "parameter5", length = 13)
	public Date getParameter5() {
		return this.parameter5;
	}

	public void setParameter5(Date parameter5) {
		this.parameter5 = parameter5;
	}

	@Column(name = "created_by", nullable = false)
	public long getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(long createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_date", nullable = false, length = 29)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Column(name = "updated_by")
	public Long getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(Long updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_date", nullable = false, length = 29)
	public Date getUpdatedDate() {
		return this.updatedDate;
	}

	public void setUpdatedDate(Date updatedDate) {
		this.updatedDate = updatedDate;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "currentBudgetMasterByTransferFromSeqno", cascade = CascadeType.ALL)
	public Set<BudgetTransfer> getBudgetTransfersForTransferFromSeqnos() {
		return budgetTransfersForTransferFromSeqnos;
	}

	public void setBudgetTransfersForTransferFromSeqnos(
			Set<BudgetTransfer> budgetTransfersForTransferFromSeqnos) {
		this.budgetTransfersForTransferFromSeqnos = budgetTransfersForTransferFromSeqnos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "currentBudgetMasterByTransferToSeqno", cascade = CascadeType.ALL)
	public Set<BudgetTransfer> getCurrentBudgetMasterByTransferToSeqno() {
		return currentBudgetMasterByTransferToSeqno;
	}

	public void setCurrentBudgetMasterByTransferToSeqno(
			Set<BudgetTransfer> currentBudgetMasterByTransferToSeqno) {
		this.currentBudgetMasterByTransferToSeqno = currentBudgetMasterByTransferToSeqno;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "currentBudgetMasterHq", cascade = CascadeType.ALL)
	public Set<BudgetAllocationDeduction> getBudgetAllocationDeductionshq() {
		return budgetAllocationDeductionshq;
	}

	public void setBudgetAllocationDeductionshq(
			Set<BudgetAllocationDeduction> budgetAllocationDeductionshq) {
		this.budgetAllocationDeductionshq = budgetAllocationDeductionshq;
	}
	
	@Transient
	public Double getTransactionAmtFirst() {
		return transactionAmtFirst;
	}

	public void setTransactionAmtFirst(Double transactionAmtFirst) {
		this.transactionAmtFirst = transactionAmtFirst;
	}

	@Transient
	public Double getTransactionAmtAddition() {
		return transactionAmtAddition;
	}

	public void setTransactionAmtAddition(Double transactionAmtAddition) {
		this.transactionAmtAddition = transactionAmtAddition;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((cbMstrSeqno == null) ? 0 : cbMstrSeqno.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		CBMaster other = (CBMaster) obj;
		if (cbMstrSeqno == null) {
			if (other.cbMstrSeqno != null)
				return false;
		} else if (!cbMstrSeqno.equals(other.cbMstrSeqno))
			return false;
		return true;
	}

	/*
	 * @OneToMany(fetch = FetchType.LAZY, mappedBy = "cbMaster",
	 * cascade=CascadeType.ALL) public Set<PoDtl> getPoDtl() { return poDtl; }
	 * 
	 * public void setPoDtl(Set<PoDtl> poDtl) { this.poDtl = poDtl; }
	 */

}
