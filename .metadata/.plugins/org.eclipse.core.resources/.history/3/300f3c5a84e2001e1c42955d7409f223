// default package
// Generated Jul 16, 2012 2:26:41 PM by Hibernate Tools 3.4.0.CR1
package my.com.cmg.iwp.maintenance.model;
import java.math.BigDecimal;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * PhFormulationSop generated by hbm2java
 */
@Entity
@Table(name = "t_formulation_sop")
public class FormulationSop implements java.io.Serializable, Comparable<FormulationSop> {

	private long formulaSopSeqno;
	private FormulationHeader formulationHeader;
	private Integer seqNo;
	private String taskDesc;
	private String parameter1;
	private String parameter2;
	private BigDecimal parameter3;
	private BigDecimal parameter4;
	private Date parameter5;
	private Character activeFlag = 'A';
	private Long createdBy;
	private Date createdDate;
	private Long updatedBy;
	private Date updatedDate;

	public FormulationSop() {
	}

	public FormulationSop(long formulaSopSeqno,
			FormulationHeader phFormulationHeader, Long createdBy,
			Date createdDate, Long updatedBy, Date updatedDate) {
		this.formulaSopSeqno = formulaSopSeqno;
		this.formulationHeader = phFormulationHeader;
		this.createdBy = createdBy;
		this.createdDate = createdDate;
		this.updatedBy = updatedBy;
		this.updatedDate = updatedDate;
	}

	public FormulationSop(long formulaSopSeqno,
			FormulationHeader phFormulationHeader,
			Integer seqNo, String taskDesc, String parameter1,
			String parameter2, BigDecimal parameter3, BigDecimal parameter4,
			Date parameter5, Character activeFlag, Long createdBy,
			Date createdDate, Long updatedBy, Date updatedDate) {
		this.formulaSopSeqno = formulaSopSeqno;
		this.formulationHeader = phFormulationHeader;
		this.seqNo = seqNo;
		this.taskDesc = taskDesc;
		this.parameter1 = parameter1;
		this.parameter2 = parameter2;
		this.parameter3 = parameter3;
		this.parameter4 = parameter4;
		this.parameter5 = parameter5;
		this.activeFlag = activeFlag;
		this.createdBy = createdBy;
		this.createdDate = createdDate;
		this.updatedBy = updatedBy;
		this.updatedDate = updatedDate;
	}

	@Id
	@Column(name = "formula_sop_seqno", unique = true, nullable = false)
	@SequenceGenerator(name = "formulationSopSeqGen", sequenceName = "t_formulation_sop_seq", allocationSize = 1)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "formulationSopSeqGen")
	public long getFormulaSopSeqno() {
		return this.formulaSopSeqno;
	}

	public void setFormulaSopSeqno(long formulaSopSeqno) {
		this.formulaSopSeqno = formulaSopSeqno;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "formula_seqno", nullable = false)
	public FormulationHeader getFormulationHeader() {
		return formulationHeader;
	}

	public void setFormulationHeader(FormulationHeader formulationHeader) {
		this.formulationHeader = formulationHeader;
	}
	
	@Column(name = "seq_no", precision = 3, scale = 0)
	public Integer getSeqNo() {
		return this.seqNo;
	}

	public void setSeqNo(Integer seqNo) {
		this.seqNo = seqNo;
	}

	@Column(name = "task_description", length = 90)
	public String getTaskDesc() {
		return this.taskDesc;
	}

	public void setTaskDesc(String taskDesc) {
		this.taskDesc = taskDesc;
	}

	@Column(name = "parameter1", length = 100)
	public String getParameter1() {
		return this.parameter1;
	}

	public void setParameter1(String parameter1) {
		this.parameter1 = parameter1;
	}

	@Column(name = "parameter2", length = 100)
	public String getParameter2() {
		return this.parameter2;
	}

	public void setParameter2(String parameter2) {
		this.parameter2 = parameter2;
	}

	@Column(name = "parameter3", precision = 8, scale = 4)
	public BigDecimal getParameter3() {
		return this.parameter3;
	}

	public void setParameter3(BigDecimal parameter3) {
		this.parameter3 = parameter3;
	}

	@Column(name = "parameter4", precision = 8, scale = 4)
	public BigDecimal getParameter4() {
		return this.parameter4;
	}

	public void setParameter4(BigDecimal parameter4) {
		this.parameter4 = parameter4;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "parameter5", length = 13)
	public Date getParameter5() {
		return this.parameter5;
	}

	public void setParameter5(Date parameter5) {
		this.parameter5 = parameter5;
	}

	@Column(name = "active_flag")
	public Character getActiveFlag() {
		return this.activeFlag;
	}

	public void setActiveFlag(Character activeFlag) {
		this.activeFlag = activeFlag;
	}

	@Column(name = "created_by", nullable = false)
	public Long getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(Long createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_date", nullable = false, length = 29)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Column(name = "updated_by", nullable = false)
	public Long getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(Long updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_date", nullable = false, length = 29)
	public Date getUpdatedDate() {
		return this.updatedDate;
	}

	public void setUpdatedDate(Date updatedDate) {
		this.updatedDate = updatedDate;
	}

	@Override
	public int compareTo(FormulationSop formulationSop) {
		if(formulationSop==null || this==null){
			return -1;
		}
		return this.getSeqNo().compareTo(formulationSop.getSeqNo());
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
	        return true;
	    if (obj == null)
	        return false;
	    if (!(obj instanceof FormulationSop))
	        return false;
	    FormulationSop other = (FormulationSop) obj;
	    if (getFormulaSopSeqno() == 0) {
	        if (other.getFormulaSopSeqno() != 0)
	            return false;
	    } else if (!(getFormulaSopSeqno()+"").equals(other.getFormulaSopSeqno()+""))
	        return false;
	    return true;
	}
	
	@Override
	public int hashCode() {
		final int prime = 31;
	    int result = 1;
	    result = prime * result + ((getFormulaSopSeqno() == 0) ? 0 : Integer.valueOf(""+getFormulaSopSeqno()));
	    return result;
	}
}
