package my.com.cmg.iwp.maintenance.model;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

import my.com.cmg.backend.model.inventory.penalty.PenaltyItem;
import my.com.cmg.backend.service.inventory.penalty.PenaltyItemService;

/**
 * Item generated by hbm2java
 */
@Entity
@Table(name = "t_item_images")
public class ItemImages implements java.io.Serializable {
	private static final long serialVersionUID = 846454440645312712L;
	
	private long itemImageSeqno  = Long.MIN_VALUE;
	private Item item;
	private byte[] itemImageData;
	private String itemImageName;
	private long createdBy;
	private Date createdDate;
	private long updatedBy;
	private Date updatedDate;
	
	
	
	public ItemImages(long itemImageSeqno, Item item, byte[] itemImageData,
			String itemImageName, long createdBy, Date createdDate,
			long updatedBy, Date updatedDate) {
		super();
		this.itemImageSeqno = itemImageSeqno;
		this.item = item;
		this.setItemImageData(itemImageData);
		this.setItemImageName(itemImageName);
		this.createdBy = createdBy;
		this.createdDate = createdDate;
		this.updatedBy = updatedBy;
		this.updatedDate = updatedDate;
	}
	
	public ItemImages() {
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "item"))
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "ITIM_ITEM_SEQNO")
	public long getItemImageSeqno() {
		return itemImageSeqno;
	}
	public void setItemImageSeqno(long itemImageSeqno) {
		this.itemImageSeqno = itemImageSeqno;
	}
	
	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public Item getItem() {
		return item;
	}
	public void setItem(Item item) {
		this.item = item;
	}
	
	@Column(name = "itim_Image_Data", length = 200)
	public byte[] getItemImageData() {
		return itemImageData;
	}

	public void setItemImageData(byte[] itemImageData) {
		this.itemImageData = itemImageData;
	}
	
	@Column(name = "itim_Image_Name", length = 100)
	public String getItemImageName() {
		return itemImageName;
	}

	public void setItemImageName(String itemImageName) {
		this.itemImageName = itemImageName;
	}
	
	@Column(name = "created_by", nullable = false)
	public long getCreatedBy() {
		return createdBy;
	}
	public void setCreatedBy(long createdBy) {
		this.createdBy = createdBy;
	}
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_date", nullable = false, length = 29)
	public Date getCreatedDate() {
		return createdDate;
	}
	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}
	
	@Column(name = "updated_by", nullable = false)
	public long getUpdatedBy() {
		return updatedBy;
	}
	public void setUpdatedBy(long updatedBy) {
		this.updatedBy = updatedBy;
	}
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_date", nullable = false, length = 29)
	public Date getUpdatedDate() {
		return updatedDate;
	}
	public void setUpdatedDate(Date updatedDate) {
		this.updatedDate = updatedDate;
	}
}