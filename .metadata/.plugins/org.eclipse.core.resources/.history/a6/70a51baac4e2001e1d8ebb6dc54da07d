package my.com.cmg.iwp.backend.model.inventory.penalty;

// Generated May 21, 2015 10:21:47 AM by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;
import java.util.Date;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.SequenceGenerator;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import my.com.cmg.iwp.maintenance.model.SecUser;

/**
 * TPenaltyVerification generated by hbm2java
 */
@Entity
@Table(name = "T_PENALTY_VERIFICATION_DTL")
@JsonIgnoreProperties(ignoreUnknown=true)
public class PenaltyVerificationDtl implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	private long verifyDtlSeqno;	
	private long verifyHdrSeqno;	
	private PenaltyVerificationHdr penaltyVerificationHdr;
	private String remarks;
	private Double amount;
	private byte[] attachment;
	private long penHdrSeqno;
	private PenaltyHdr penaltyHdr;
	private String attachmentName;
	
	public PenaltyVerificationDtl(PenaltyHdr penaltyHdr,PenaltyVerificationHdr penaltyVerificationHdr, SecUser secUser) {
		this.penaltyHdr = penaltyHdr;
		this.penaltyVerificationHdr = penaltyVerificationHdr;	
		this.amount = penaltyHdr.getRealPenaltyAmt();
		this.createdBy = secUser.getId();
		this.createdUser = secUser;
		this.updatedBy = secUser.getId();
		this.updatedUser = secUser;
		this.createdDate = new Date();
		this.updatedDate = new Date();
	}
	
	public PenaltyVerificationDtl() {
	}
	
	@Id
	@Column(name = "T_PENALTY_VERIFY_DTL_SEQNO", nullable = false)
	@SequenceGenerator(name = "T_PENALTY_VERIFICATION_DTL_SEQ", sequenceName = "T_PENALTY_VERIFICATION_DTL_SEQ", allocationSize  = 1)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "T_PENALTY_VERIFICATION_DTL_SEQ")
	public long getVerifyDtlSeqno() {
		return this.verifyDtlSeqno;
	}

	public void setVerifyDtlSeqno(long TPenaltyVerifyDtlsPk) {
		this.verifyDtlSeqno = TPenaltyVerifyDtlsPk;
	}
	
	
	@Column(name = "T_PENALTY_VERIFY_SEQNO", unique = true, nullable = false, insertable=false, updatable=false)
	public long getVerifyHdrSeqno() {
		return this.verifyHdrSeqno;
	}

	public void setVerifyHdrSeqno(long TPenaltyVerifySeqno) {
		this.verifyHdrSeqno = TPenaltyVerifySeqno;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name="T_PENALTY_VERIFY_SEQNO")
	@JsonBackReference
	public PenaltyVerificationHdr getPenaltyVerificationHdr() {
		return penaltyVerificationHdr;
	}

	public void setPenaltyVerificationHdr(
			PenaltyVerificationHdr penaltyVerificationHdr) {
		this.penaltyVerificationHdr = penaltyVerificationHdr;
	}
	
	@Column(name = "P_HDR_SEQNO", unique = true, nullable = false, insertable=false, updatable=false)
	public long getPenHdrSeqno() {
		return penHdrSeqno;
	}


	public void setPenHdrSeqno(long penHdrSeqno) {
		this.penHdrSeqno = penHdrSeqno;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name="P_HDR_SEQNO")
	public PenaltyHdr getPenaltyHdr() {
		return penaltyHdr;
	}


	public void setPenaltyHdr(PenaltyHdr penaltyHdr) {
		this.penaltyHdr = penaltyHdr;
	}


	

	@Column(name = "T_REMARKS", length = 1000)
	public String getRemarks() {
		return this.remarks;
	}

	public void setRemarks(String remarks) {
		this.remarks = remarks;
	}

	


	@Column(name = "T_AMOUNT", precision = 15)
	public Double getAmount() {
		return this.amount;
	}

	public void setAmount(Double TAmount) {
		this.amount = TAmount;
	}

	@Column(name = "ATTACHMENT")
	public byte[] getAttachment() {
		return this.attachment;
	}

	public void setAttachment(byte[] attachment) {
		this.attachment = attachment;
	}
	
	
	private String parameter1;
	private String parameter2;
	private BigDecimal parameter3;
	private BigDecimal parameter4;
	private Date parameter5;
	private Character activeFlag = 'A';
	private long createdBy;
	private Date createdDate;
	private Long updatedBy;
	private Date updatedDate;

	private SecUser updatedUser;

	private SecUser createdUser;
	
	@Column(name = "parameter1", length = 100)
	public String getParameter1() {
		return this.parameter1;
	}

	public void setParameter1(String parameter1) {
		this.parameter1 = parameter1;
	}

	@Column(name = "parameter2", length = 100)
	public String getParameter2() {
		return this.parameter2;
	}

	public void setParameter2(String parameter2) {
		this.parameter2 = parameter2;
	}

	@Column(name = "parameter3")
	public BigDecimal getParameter3() {
		return this.parameter3;
	}

	public void setParameter3(BigDecimal parameter3) {
		this.parameter3 = parameter3;
	}

	@Column(name = "parameter4")
	public BigDecimal getParameter4() {
		return this.parameter4;
	}

	public void setParameter4(BigDecimal parameter4) {
		this.parameter4 = parameter4;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "parameter5", length = 13)
	public Date getParameter5() {
		return this.parameter5;
	}

	public void setParameter5(Date parameter5) {
		this.parameter5 = parameter5;
	}

	@Column(name = "active_flag", nullable = false)
	public Character getActiveFlag() {
		return this.activeFlag;
	}

	public void setActiveFlag(Character activeFlag) {
		this.activeFlag = activeFlag;
	}

	@Column(name = "created_by", nullable = false)
	public long getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(long createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_date", nullable = false, length = 29)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Column(name = "updated_by")
	public Long getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(Long updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_date", length = 29)
	public Date getUpdatedDate() {
		return this.updatedDate;
	}

	public void setUpdatedDate(Date updatedDate) {
		this.updatedDate = updatedDate;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "created_by", insertable = false, updatable = false)
	@JsonIgnore
	public SecUser getCreatedUser() {
		return this.createdUser;
	}

	public void setCreatedUser(SecUser createdUser) {
		this.createdUser = createdUser;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "updated_by", insertable = false, updatable = false)
	@JsonIgnore
	public SecUser getUpdatedUser() {
		return this.updatedUser;
	}

	public void setUpdatedUser(SecUser updatedUser) {
		this.updatedUser = updatedUser;
	}
	
	@Column(name = "attachment_name")
	public String getAttachmentName() {
		return attachmentName;
	}

	public void setAttachmentName(String attachmentName) {
		this.attachmentName = attachmentName;
	}
	
	
}
