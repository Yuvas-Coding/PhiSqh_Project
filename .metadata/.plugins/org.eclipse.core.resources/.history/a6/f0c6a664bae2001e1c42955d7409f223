package my.com.cmg.iwp.backend.model.inventory.penalty;
// Generated May 21, 2015 10:21:47 AM by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.SequenceGenerator;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.xml.bind.annotation.XmlRootElement;
import my.com.cmg.iwp.maintenance.model.Brand;
import my.com.cmg.iwp.maintenance.model.Item;
import my.com.cmg.iwp.maintenance.model.SecUser;
import my.com.cmg.iwp.webui.constant.RefCodeConstant;

/**
 * TPenaltyItem generated by hbm2java
 */
@Entity
@Table(name = "T_PENALTY_ITEM")
@XmlRootElement(name = "PenaltyItem")
@JsonIgnoreProperties(ignoreUnknown=true)
public class PenaltyItem implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	private long penItemSeqno;
	private PenaltyDtl penaltyDtl;
	private long pDtlSeqno;
	private long itemSeqno;
	private Long brandSeqno;
	private Item item;	
	private Brand brand;
	
	private String itemCode;
	private String itemName;
	private String brandCode;
	private String brandName;
	private char essentialFlag = RefCodeConstant.BOOLEAN_FALSE;
	private Long usageStock;
	private Long minStock;
	private Long actualStock;
	private char penaltyFlag = RefCodeConstant.BOOLEAN_TRUE;
	private Double penaltyAmount;
	private String itemRemarks;

	Set<PenaltyBatch> penaltyBatchs = new HashSet<PenaltyBatch>(0) ;
	public PenaltyItem() {
	}


	public PenaltyItem(Item item, Brand brand, PenaltyDtl penaltyDtl) {
		setCreatedBy(penaltyDtl.getUpdatedBy());
		setCreatedUser(penaltyDtl.getUpdatedUser());
		setCreatedDate(new Date());
		setUpdatedBy(penaltyDtl.getUpdatedBy());
		setUpdatedUser(penaltyDtl.getUpdatedUser());
		setUpdatedDate(new Date());
		setActiveFlag(RefCodeConstant.ACTIVE_FLAG_TRUE);
		setPenaltyDtl(penaltyDtl);
		setItem(item);
		setItemSeqno(item.getItemSeqno());
		setItemCode( item.getItemCode() );
		setItemName( item.getItemDesc() );
		setBrand(brand);
		setBrandSeqno(brand.getBrdSeqno());
		setBrandCode(brand.getBrdCode());
		setBrandName(brand.getBrdName());
	}


	@Id
	@Column(name = "P_ITEM_SEQNO", unique = true, nullable = false)
	@SequenceGenerator(name = "T_PENALTY_ITEM_SEQ", sequenceName = "T_PENALTY_ITEM_SEQ", allocationSize  = 1)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "T_PENALTY_ITEM_SEQ")
	public long getPenItemSeqno() {
		return this.penItemSeqno;
	}

	public void setPenItemSeqno(long PChildSeqno) {
		this.penItemSeqno = PChildSeqno;
	}

	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name="P_DTL_SEQNO")
	@JsonBackReference("PenaltyItem")
	public PenaltyDtl getPenaltyDtl() {
		return penaltyDtl;
	}

	public void setPenaltyDtl(PenaltyDtl penaltyDtl) {
		this.penaltyDtl = penaltyDtl;
	}

	@Column(name = "P_DTL_SEQNO", insertable=false, updatable=false)
	public long getPDtlSeqno() {
		return this.pDtlSeqno;
	}

	public void setPDtlSeqno(long PDtlSeqno) {
		this.pDtlSeqno = PDtlSeqno;
	}

	@Column(name = "ITEM_SEQNO", insertable=false, updatable=false)
	public long getItemSeqno() {
		return this.itemSeqno;
	}

	public void setItemSeqno(long item) {
		this.itemSeqno = item;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ITEM_SEQNO")
	@JsonIgnore
	public Item getItem() {
		return item;
	}


	public void setItem(Item item) {
		this.item = item;
	}


	@Column(name = "BRAND_SEQNO", insertable=false,updatable=false)
	public Long getBrandSeqno() {
		return this.brandSeqno;
	}

	public void setBrandSeqno(Long brand) {
		this.brandSeqno = brand;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "BRAND_SEQNO")
	@JsonIgnore
	public Brand getBrand() {
		return brand;
	}


	public void setBrand(Brand brand) {
		this.brand = brand;
	}


	@Column(name = "ITEM_CODE", length = 20)
	public String getItemCode() {
		return this.itemCode;
	}

	public void setItemCode(String PItemCode) {
		this.itemCode = PItemCode;
	}

	@Column(name = "ITEM_NAME", length = 100)
	public String getItemName() {
		return this.itemName;
	}

	public void setItemName(String PItemName) {
		this.itemName = PItemName;
	}

	@Column(name = "BRAND_CODE", length = 20)
	public String getBrandCode() {
		return this.brandCode;
	}

	public void setBrandCode(String PBrandCd) {
		this.brandCode = PBrandCd;
	}

	@Column(name = "BRAND_NAME", length = 40)
	public String getBrandName() {
		return this.brandName;
	}

	public void setBrandName(String brandName) {
		this.brandName = brandName;
	}

	@Column(name = "ESSENTIAL_FLAG", nullable = false, length = 1)
	public char getEssentialFlag() {
		return this.essentialFlag;
	}

	public void setEssentialFlag(char essentialFlag) {
		this.essentialFlag = essentialFlag;
	}

	@Column(name = "USAGE_STOCK", precision = 22, scale = 0)
	public Long getUsageStock() {
		return this.usageStock;
	}

	public void setUsageStock(Long usageStock) {
		this.usageStock = usageStock;
	}

	@Column(name = "MIN_STOCK", precision = 22, scale = 0)
	public Long getMinStock() {
		return this.minStock;
	}

	public void setMinStock(Long minStock) {
		this.minStock = minStock;
	}

	@Column(name = "ACTUAL_STOCK", precision = 22, scale = 0)
	public Long getActualStock() {
		return this.actualStock;
	}

	public void setActualStock(Long actualStock) {
		this.actualStock = actualStock;
	}

	@Column(name = "PENALTY_FLAG", nullable = false, length = 1)
	public char getPenaltyFlag() {
		return this.penaltyFlag;
	}

	public void setPenaltyFlag(char PenaltyFlag) {
		this.penaltyFlag = PenaltyFlag;
	}

	@Column(name = "PENALTY_AMOUNT", precision = 15)
	public Double getPenaltyAmount() {
		return this.penaltyAmount;
	}

	public void setPenaltyAmount(Double penaltyAmount) {
		this.penaltyAmount = penaltyAmount;
	}

	@Column(name = "ITEM_REMARKS", length = 1000)
	public String getItemRemarks() {
		return this.itemRemarks;
	}

	public void setItemRemarks(String itemRemarks) {
		this.itemRemarks = itemRemarks;
	}

	@OneToMany(fetch = FetchType.LAZY,mappedBy ="penaltyItem",cascade=javax.persistence.CascadeType.REFRESH)
	@Cascade({CascadeType.SAVE_UPDATE,CascadeType.DELETE_ORPHAN})
	@JsonBackReference
	public Set<PenaltyBatch> getPenaltyBatchs() {
		return penaltyBatchs;
	}


	public void setPenaltyBatchs(Set<PenaltyBatch> penaltyBatchs) {
		this.penaltyBatchs = penaltyBatchs;
	}

	private String parameter1;
	private String parameter2;
	private BigDecimal parameter3;
	private BigDecimal parameter4;
	private Date parameter5;
	private Character activeFlag = 'A';
	private long createdBy;
	private Date createdDate;
	private Long updatedBy;
	private Date updatedDate;

	private SecUser updatedUser;

	private SecUser createdUser;
	
	@Column(name = "parameter1", length = 100)
	public String getParameter1() {
		return this.parameter1;
	}

	public void setParameter1(String parameter1) {
		this.parameter1 = parameter1;
	}

	@Column(name = "parameter2", length = 100)
	public String getParameter2() {
		return this.parameter2;
	}

	public void setParameter2(String parameter2) {
		this.parameter2 = parameter2;
	}

	@Column(name = "parameter3")
	public BigDecimal getParameter3() {
		return this.parameter3;
	}

	public void setParameter3(BigDecimal parameter3) {
		this.parameter3 = parameter3;
	}

	@Column(name = "parameter4")
	public BigDecimal getParameter4() {
		return this.parameter4;
	}

	public void setParameter4(BigDecimal parameter4) {
		this.parameter4 = parameter4;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "parameter5", length = 13)
	public Date getParameter5() {
		return this.parameter5;
	}

	public void setParameter5(Date parameter5) {
		this.parameter5 = parameter5;
	}

	@Column(name = "active_flag", nullable = false)
	public Character getActiveFlag() {
		return this.activeFlag;
	}

	public void setActiveFlag(Character activeFlag) {
		this.activeFlag = activeFlag;
	}

	@Column(name = "created_by", nullable = false)
	public long getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(long createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_date", nullable = false, length = 29)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Column(name = "updated_by")
	public Long getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(Long updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_date", length = 29)
	public Date getUpdatedDate() {
		return this.updatedDate;
	}

	public void setUpdatedDate(Date updatedDate) {
		this.updatedDate = updatedDate;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "created_by", insertable = false, updatable = false)
	@JsonIgnore
	public SecUser getCreatedUser() {
		return this.createdUser;
	}

	public void setCreatedUser(SecUser createdUser) {
		this.createdUser = createdUser;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "updated_by", insertable = false, updatable = false)
	@JsonIgnore
	public SecUser getUpdatedUser() {
		return this.updatedUser;
	}

	public void setUpdatedUser(SecUser updatedUser) {
		this.updatedUser = updatedUser;
	}
}
