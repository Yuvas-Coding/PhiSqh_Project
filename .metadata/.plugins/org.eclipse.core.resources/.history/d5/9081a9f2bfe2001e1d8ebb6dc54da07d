package my.com.cmg.iwp.maintenance.model;

// Generated Apr 6, 2012 10:02:52 AM by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.FetchType;
import jakarta.persistence.Id;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.persistence.UniqueConstraint;



/**
 * Uom generated by hbm2java
 */
@jakarta.persistence.Entity
@Table(name = "t_ep_alt_uom", uniqueConstraints = @UniqueConstraint(columnNames = "alt_uom_seqno"))
public class AltUom implements java.io.Serializable {
	private static final long serialVersionUID = 1L;
	private long altUomSeqno = Long.MIN_VALUE;
	private String code;
	private String conversion;
	private String description;
	private String parameter1;
	private String parameter2;
	private BigDecimal parameter3;
	private BigDecimal parameter4;
	private Date parameter5;
	private Character activeFlag = 'A';
	private Long createdBy;
	private Date createdDate;
	private Long updatedBy;
	private Date updatedDate;
	private Set<ItemePMapping> itemePMappings = new HashSet<ItemePMapping>(0);

	// private Set<DrugUom> drugUOMs = new HashSet<DrugUom>(0);
	// private Set<DrugDuration> drugDurations = new HashSet<DrugDuration>(0);

	public AltUom() {
	}

	public AltUom(long altUomSeqno, String code, String description, Long createdBy, Date createdDate,
			Long updatedBy, Date updatedDate) {
		this.altUomSeqno = altUomSeqno;
		this.code = code;
		this.description = description;
		this.createdBy = createdBy;
		this.createdDate = createdDate;
		this.updatedBy = updatedBy;
		this.updatedDate = updatedDate;
	}

	@Id
	@Column(name = "alt_uom_seqno", unique = true, nullable = false)
	/*@SequenceGenerator(name = "altUomSEQ", sequenceName = "t_ep_alt_uom_seq", allocationSize = 1)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "altUomSEQ")*/
	public long getAltUomSeqno() {
		return this.altUomSeqno;
	}

	public void setAltUomSeqno(long altUomSeqno) {
		this.altUomSeqno = altUomSeqno;
	}

	@Column(name = "code")
	public void setCode(String code) {
		this.code = code;
	}

	public String getCode() {
		return code;
	}

	@Column(name = "conversion")
	public void setConversion(String conversion) {
		this.conversion = conversion;
	}

	public String getConversion() {
		return conversion;
	}

	@Column(name = "description")
	public void setDescription(String description) {
		this.description = description;
	}

	public String getDescription() {
		return description;
	}

	@Column(name = "parameter1", length = 100)
	public String getParameter1() {
		return this.parameter1;
	}

	public void setParameter1(String parameter1) {
		this.parameter1 = parameter1;
	}

	@Column(name = "parameter2", length = 100)
	public String getParameter2() {
		return this.parameter2;
	}

	public void setParameter2(String parameter2) {
		this.parameter2 = parameter2;
	}

	@Column(name = "parameter3", precision = 8, scale = 4)
	public BigDecimal getParameter3() {
		return this.parameter3;
	}

	public void setParameter3(BigDecimal parameter3) {
		this.parameter3 = parameter3;
	}

	@Column(name = "parameter4", precision = 8, scale = 4)
	public BigDecimal getParameter4() {
		return this.parameter4;
	}

	public void setParameter4(BigDecimal parameter4) {
		this.parameter4 = parameter4;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "parameter5", length = 13)
	public Date getParameter5() {
		return this.parameter5;
	}

	public void setParameter5(Date parameter5) {
		this.parameter5 = parameter5;
	}

	@Column(name = "activeflag")
	public Character getActiveFlag() {
		return this.activeFlag;
	}

	public void setActiveFlag(Character activeFlag) {
		this.activeFlag = activeFlag;
	}

	@Column(name = "created_by")
	public Long getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(Long createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_date", nullable = false, length = 29)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Column(name = "updated_by")
	public Long getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(Long updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_date", nullable = false, length = 29)
	public Date getUpdatedDate() {
		return this.updatedDate;
	}

	public void setUpdatedDate(Date updatedDate) {
		this.updatedDate = updatedDate;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "alternateUOMSeqno", cascade = CascadeType.ALL)
	public Set<ItemePMapping> getItemePMappings() {
		return this.itemePMappings;
	}

	public void setItemePMappings(Set<ItemePMapping> itemePMappings) {
		this.itemePMappings = itemePMappings;
	}

}
