package my.com.cmg.iwp.maintenance.model;

// Generated May 29, 2012 4:37:05 PM by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * PhNonDrugs generated by hbm2java
 */
@Entity
@Table(name = "t_non_drugs", uniqueConstraints = @UniqueConstraint(columnNames = "nondrug_code"))
public class NonDrug implements java.io.Serializable {
	private static final long serialVersionUID = -4697182693074334816L;
	private long nondrugSeqno = Long.MIN_VALUE;
	private String nondrugCode;
	private String nondrugName;
	private String parameter1;
	private String parameter2;
	private BigDecimal parameter3;
	private BigDecimal parameter4;
	private Date parameter5;
	private Character activeFlag = 'A';
	private long createdBy;
	private Date createdDate;
	private long updatedBy;
	private Date updatedDate;
	private String remark;
	private long uomSeqno;
	private Long itmSubgroupSeqno;
	private Long itmCatSeqno;
	// private Character itmStandardYn;
	private String itemSpecific;
	private Set<Item> items = new HashSet<Item>(0);
	// private BigDecimal avgUnitPrice= new BigDecimal(0);
	private Uom uom;
	private ItemSubgroup itemSubgroup;
	// private Set<NonDrugBrand> nondrugBrand = new HashSet<NonDrugBrand>(0);
	private ItemCategory itemCategory;
	private Long objectSeqno;
	private VoteObject voteObject;

	public NonDrug() {
	}

	public NonDrug(long nondrugSeqno, String nondrugCode, String nondrugName, long createBy, Date createDate, long updateBy, Date updateDate) {
		this.nondrugSeqno = nondrugSeqno;
		this.nondrugCode = nondrugCode;
		this.nondrugName = nondrugName;
		this.createdBy = createBy;
		this.createdDate = createDate;
		this.updatedBy = updateBy;
		this.updatedDate = updateDate;
	}

	public NonDrug(long nondrugSeqno, String nondrugCode, String nondrugName, String parameter1, String parameter2, BigDecimal parameter3,
			BigDecimal parameter4, Date parameter5, Character activeFlag, long createBy, Date createDate, long updateBy, Date updateDate,
			String remark, long uomSeqno, long itmSubgroupSeqno, long itmCatSeqno, String itemSpecific) {
		this.nondrugSeqno = nondrugSeqno;
		this.nondrugCode = nondrugCode;
		this.nondrugName = nondrugName;
		this.parameter1 = parameter1;
		this.parameter2 = parameter2;
		this.parameter3 = parameter3;
		this.parameter4 = parameter4;
		this.parameter5 = parameter5;
		this.activeFlag = activeFlag;
		this.createdBy = createBy;
		this.createdDate = createDate;
		this.updatedBy = updateBy;
		this.updatedDate = updateDate;
		this.remark = remark;
		this.uomSeqno = uomSeqno;
		this.itmSubgroupSeqno = itmSubgroupSeqno;
		this.itmCatSeqno = itmCatSeqno;
		this.itemSpecific = itemSpecific;
	}

	@Id
	@Column(name = "nondrug_seqno", unique = true, nullable = false)
	@SequenceGenerator(name = "nondrug_seqno", sequenceName = "t_non_drugs_seq", allocationSize = 1)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "nondrug_seqno")
	public long getNondrugSeqno() {
		return this.nondrugSeqno;
	}

	public void setNondrugSeqno(long nondrugSeqno) {
		this.nondrugSeqno = nondrugSeqno;
	}

	@Column(name = "nondrug_code", unique = true, nullable = false, length = 20)
	public String getNondrugCode() {
		return this.nondrugCode;
	}

	public void setNondrugCode(String nondrugCode) {
		this.nondrugCode = nondrugCode;
	}

	@Column(name = "nondrug_name", nullable = false, length = 200)
	public String getNondrugName() {
		return this.nondrugName;
	}

	public void setNondrugName(String nondrugName) {
		this.nondrugName = nondrugName;
	}

	@Column(name = "parameter1", length = 100)
	public String getParameter1() {
		return this.parameter1;
	}

	public void setParameter1(String parameter1) {
		this.parameter1 = parameter1;
	}

	@Column(name = "parameter2", length = 100)
	public String getParameter2() {
		return this.parameter2;
	}

	public void setParameter2(String parameter2) {
		this.parameter2 = parameter2;
	}

	@Column(name = "parameter3", precision = 8, scale = 4)
	public BigDecimal getParameter3() {
		return this.parameter3;
	}

	public void setParameter3(BigDecimal parameter3) {
		this.parameter3 = parameter3;
	}

	@Column(name = "parameter4", precision = 8, scale = 4)
	public BigDecimal getParameter4() {
		return this.parameter4;
	}

	public void setParameter4(BigDecimal parameter4) {
		this.parameter4 = parameter4;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "parameter5", length = 13)
	public Date getParameter5() {
		return this.parameter5;
	}

	public void setParameter5(Date parameter5) {
		this.parameter5 = parameter5;
	}

	@Column(name = "hq_status")
	public Character getActiveFlag() {
		return this.activeFlag;
	}

	public void setActiveFlag(Character activeFlag) {
		this.activeFlag = activeFlag;
	}

	@Column(name = "created_by", nullable = false)
	public long getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(long createBy) {
		this.createdBy = createBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_date", nullable = false, length = 29)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createDate) {
		this.createdDate = createDate;
	}

	@Column(name = "updated_by", nullable = false)
	public long getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(long updateBy) {
		this.updatedBy = updateBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_date", nullable = false, length = 29)
	public Date getUpdatedDate() {
		return this.updatedDate;
	}

	public void setUpdatedDate(Date updateDate) {
		this.updatedDate = updateDate;
	}
	@Column(name = "remark", length = 100)
	public void setRemark(String remark) {
		this.remark = remark;
	}

	public String getRemark() {
		return remark;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "nonDrug")
	// @Fetch(FetchMode.SELECT)
	public Set<Item> getItems() {
		return this.items;
	}

	public void setItems(Set<Item> items) {
		this.items = items;
	}

	// @Column(name = "avg_unit_price", precision = 15, scale = 3)
	// public BigDecimal getAvgUnitPrice() {
	// return this.avgUnitPrice;
	// }
	//
	// public void setAvgUnitPrice(BigDecimal avgUnitPrice) {
	// this.avgUnitPrice = avgUnitPrice;
	// }

	@Column(name = "pku_seqno", nullable = true)
	public long getUomSeqno() {
		return uomSeqno;
	}

	public void setUomSeqno(long uomSeqno) {
		this.uomSeqno = uomSeqno;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "pku_seqno", nullable = true, insertable = false, updatable = false)
	public Uom getUom() {
		return uom;
	}

	public void setUom(Uom uom) {
		this.uom = uom;
		if (uom != null)
			this.uomSeqno = uom.getUomSeqno();
	}

	@Column(name = "itm_subgroup_seqno", nullable = true)
	public Long getItmSubgroupSeqno() {
		return itmSubgroupSeqno;
	}

	public void setItmSubgroupSeqno(Long itmSubgroupSeqno) {
		this.itmSubgroupSeqno = itmSubgroupSeqno;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "itm_subgroup_seqno", nullable = true, insertable = false, updatable = false)
	public ItemSubgroup getItemSubgroup() {
		return itemSubgroup;
	}

	public void setItemSubgroup(ItemSubgroup itemSubgroup) {
		this.itemSubgroup = itemSubgroup;
		if (itemSubgroup != null)
			this.itmSubgroupSeqno = itemSubgroup.getItmSubgroupSeqno();
	}

	@Column(name = "itm_cat_seqno")
	public Long getItmCatSeqno() {
		return itmCatSeqno;
	}

	public void setItmCatSeqno(Long itmCatSeqno) {
		this.itmCatSeqno = itmCatSeqno;
	}

	// public void setItmStandardYn(Character itmStandardYn) {
	// this.itmStandardYn = itmStandardYn;
	// }
	//
	// @Column(name = "item_standard_yn")
	// public Character getItmStandardYn() {
	// return itmStandardYn;
	// }

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "itm_cat_seqno", nullable = true, insertable = false, updatable = false)
	public ItemCategory getItemCategory() {
		return itemCategory;
	}

	public void setItemCategory(ItemCategory itemCategory) {
		this.itemCategory = itemCategory;
		if (itemCategory != null)
			this.itmCatSeqno = itemCategory.getItmCatSeqno();
	}
	/*
	 * @OneToMany(fetch = FetchType.LAZY, mappedBy = "nonDrug") public Set<NonDrugBrand> getNonDrugBrand() { return this.nondrugBrand; } public void setNonDrugBrand(Set<NonDrugBrand> nondrugBrand) {
	 * this.nondrugBrand = nondrugBrand; }
	 */

	public void setItemSpecific(String itemSpecific) {
		this.itemSpecific = itemSpecific;
	}

	@Column(name = "item_specific")
	public String getItemSpecific() {
		return itemSpecific;
	}

	@Column(name="object_seqno")
	public Long getObjectSeqno() {
		return objectSeqno;
	}

	public void setObjectSeqno(Long objectSeqno) {
		this.objectSeqno = objectSeqno;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "object_seqno", nullable = true, insertable = false, updatable = false)
	public VoteObject getVoteObject() {
		return voteObject;
	}

	public void setVoteObject(VoteObject voteObject) {
		this.voteObject = voteObject;
	}
}