package my.com.cmg.iwp.backend.model.inventory.penalty;

// Generated May 21, 2015 10:21:47 AM by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonManagedReference;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.SequenceGenerator;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlRootElement;
import my.com.cmg.iwp.maintenance.model.SecUser;
import my.com.cmg.iwp.webui.constant.RefCodeConstant;

/**
 * TPenaltyDtl generated by hbm2java
 */
@Entity
@Table(name = "T_PENALTY_DTL")
@XmlRootElement(name = "PenaltyDtl")
@JsonIgnoreProperties(ignoreUnknown=true)
public class PenaltyDtl implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	private long pDtlSeqno;
	private PenaltyHdr penaltyHdr;
	private long pHdrSeqno;
//	private Long doSeqNo;
	private String doNo;
	private Double doAmount;
	Set<PenaltyItem> penaltyItems = new HashSet<PenaltyItem>(0);

	public PenaltyDtl() {
		
	}
	
	public PenaltyDtl(String doNumber, Double doAmount, PenaltyHdr penaltyHdr) {
		setCreatedBy(penaltyHdr.getUpdatedBy());
		setCreatedUser(penaltyHdr.getUpdatedUser());
		setCreatedDate(new Date());
		setUpdatedBy(penaltyHdr.getUpdatedBy());
		setUpdatedUser(penaltyHdr.getUpdatedUser());
		setUpdatedDate(new Date());
		setActiveFlag(RefCodeConstant.ACTIVE_FLAG_TRUE);
		setPenaltyHdr(penaltyHdr);
		setDoNo(doNumber);
		setDoAmount(doAmount);
	}


	@Id
	@Column(name = "P_DTL_SEQNO", unique = true, nullable = false)
	@SequenceGenerator(name = "T_PENALTY_DTL_SEQ", sequenceName = "T_PENALTY_DTL_SEQ", allocationSize  = 1)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "T_PENALTY_DTL_SEQ")
	public long getPDtlSeqno() {
		return this.pDtlSeqno;
	}

	public void setPDtlSeqno(long PDtlSeqno) {
		this.pDtlSeqno = PDtlSeqno;
	}

	
	@ManyToOne(fetch=FetchType.LAZY)
	@JoinColumn(name ="P_HDR_SEQNO")
	@JsonBackReference("PenaltyDtl")
	public PenaltyHdr getPenaltyHdr() {
		return penaltyHdr;
	}

	public void setPenaltyHdr(PenaltyHdr penaltyHdr) {
		this.penaltyHdr = penaltyHdr;
	}

	@Column(name = "P_HDR_SEQNO", precision = 22, scale = 0, insertable=false, updatable=false)
	public long getPHdrSeqno() {
		return this.pHdrSeqno;
	}

	public void setPHdrSeqno(long phdrSeqno) {
		this.pHdrSeqno = phdrSeqno;
	}

//	@Column(name = "DO_SEQNO", precision = 22, scale = 0)
//	public Long getDoSeqNo() {
//		return this.doSeqNo;
//	}
//
//	public void setDoSeqNo(Long doSeqNo) {
//		this.doSeqNo = doSeqNo;
//	}

	@Column(name = "DO_NO", length = 100)
	public String getDoNo() {
		return this.doNo;
	}

	public void setDoNo(String doNo) {
		this.doNo = doNo;
	}

	@Column(name = "DO_AMOUNT", precision = 15)
	public Double getDoAmount() {
		return this.doAmount;
	}

	public void setDoAmount(Double doAmount) {
		this.doAmount = doAmount;
	}
	
	@OneToMany(fetch = FetchType.LAZY,mappedBy ="penaltyDtl",cascade=javax.persistence.CascadeType.REFRESH)
	@Cascade({CascadeType.SAVE_UPDATE,CascadeType.DELETE_ORPHAN})
	@XmlElement
	@JsonManagedReference("PenaltyItem")
	public Set<PenaltyItem> getPenaltyItems() {
		return penaltyItems;
	}

	public void setPenaltyItems(Set<PenaltyItem> penaltyItems) {
		this.penaltyItems = penaltyItems;
	}

	
	private String parameter1;
	private String parameter2;
	private BigDecimal parameter3;
	private BigDecimal parameter4;
	private Date parameter5;
	private Character activeFlag = 'A';
	private long createdBy;
	private Date createdDate;
	private Long updatedBy;
	private Date updatedDate;

	private SecUser updatedUser;

	private SecUser createdUser;
	
	@Column(name = "parameter1", length = 100)
	public String getParameter1() {
		return this.parameter1;
	}

	public void setParameter1(String parameter1) {
		this.parameter1 = parameter1;
	}

	@Column(name = "parameter2", length = 100)
	public String getParameter2() {
		return this.parameter2;
	}

	public void setParameter2(String parameter2) {
		this.parameter2 = parameter2;
	}

	@Column(name = "parameter3")
	public BigDecimal getParameter3() {
		return this.parameter3;
	}

	public void setParameter3(BigDecimal parameter3) {
		this.parameter3 = parameter3;
	}

	@Column(name = "parameter4")
	public BigDecimal getParameter4() {
		return this.parameter4;
	}

	public void setParameter4(BigDecimal parameter4) {
		this.parameter4 = parameter4;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "parameter5", length = 13)
	public Date getParameter5() {
		return this.parameter5;
	}

	public void setParameter5(Date parameter5) {
		this.parameter5 = parameter5;
	}

	@Column(name = "active_flag", nullable = false)
	public Character getActiveFlag() {
		return this.activeFlag;
	}

	public void setActiveFlag(Character activeFlag) {
		this.activeFlag = activeFlag;
	}

	@Column(name = "created_by", nullable = false)
	public long getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(long createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_date", nullable = false, length = 29)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Column(name = "updated_by")
	public Long getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(Long updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_date", length = 29)
	public Date getUpdatedDate() {
		return this.updatedDate;
	}

	public void setUpdatedDate(Date updatedDate) {
		this.updatedDate = updatedDate;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "created_by", insertable = false, updatable = false)
	@JsonIgnore
	public SecUser getCreatedUser() {
		return this.createdUser;
	}

	public void setCreatedUser(SecUser createdUser) {
		this.createdUser = createdUser;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "updated_by", insertable = false, updatable = false)
	@JsonIgnore
	public SecUser getUpdatedUser() {
		return this.updatedUser;
	}

	public void setUpdatedUser(SecUser updatedUser) {
		this.updatedUser = updatedUser;
	}
}
