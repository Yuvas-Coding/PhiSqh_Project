package my.com.cmg.iwp.backend.model.sdr;

import java.util.Date;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.SequenceGenerator;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import jakarta.persistence.Version;
import jakarta.xml.bind.annotation.XmlRootElement;

/**
 * SpecialDrugTreatment generated by hbm2java
 */
@Entity
@Table(name = "T_SPL_DRUG_TREATMENT_INT")
@XmlRootElement(name = "SpecialDrugTreatment")
@JsonIgnoreProperties(ignoreUnknown=true)
public class SpecialDrugTreatment implements java.io.Serializable {

	private long sdTreatmentSeqno;
	private Integer version;
	private SpecialDrugPatient specialDrugPatient;
	private String alternativeTreament;
	private String duration;
	private String reason;
	private long createdBy;
	private Date createdDate;
	private long updatedBy;
	private Date updatedDate;

	public SpecialDrugTreatment() {
	}

	public SpecialDrugTreatment(long sdTreatmentSeqno,
			SpecialDrugRequestOrder specialDrugRequestOrder, Date createdDate,
			Date updatedDate) {
		this.sdTreatmentSeqno = sdTreatmentSeqno;
//		this.specialDrugRequestOrder = specialDrugRequestOrder;
		this.createdDate = createdDate;
		this.updatedDate = updatedDate;
	}

	public SpecialDrugTreatment(long sdTreatmentSeqno,
			SpecialDrugRequestOrder specialDrugRequestOrder,
			String alternativeTreament, String duration, String reason,
			long createdBy, Date createdDate, long updatedBy, Date updatedDate) {
		this.sdTreatmentSeqno = sdTreatmentSeqno;
//		this.specialDrugRequestOrder = specialDrugRequestOrder;
		this.alternativeTreament = alternativeTreament;
		this.duration = duration;
		this.reason = reason;
		this.createdBy = createdBy;
		this.createdDate = createdDate;
		this.updatedBy = updatedBy;
		this.updatedDate = updatedDate;
	}

	@Id
	@Column(name = "SD_TREATMENT_SEQNO", unique = true, nullable = false, precision = 38, scale = 0)
	@SequenceGenerator(name = "sdTreatmentSeqno", sequenceName = "T_SPL_DRUG_TREATMENT_INT_SEQ", allocationSize = 1)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "sdTreatmentSeqno")
	public long getSdTreatmentSeqno() {
		return this.sdTreatmentSeqno;
	}

	public void setSdTreatmentSeqno(long sdTreatmentSeqno) {
		this.sdTreatmentSeqno = sdTreatmentSeqno;
	}

	@Version
	@Column(name = "VERSION")
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

//	@ManyToOne(fetch = FetchType.LAZY)
//	@JoinColumn(name = "SDR_ORDER_SEQNO", nullable = false)
//	@JsonBackReference
//	public SpecialDrugRequestOrder getSpecialDrugRequestOrder() {
//		return this.specialDrugRequestOrder;
//	}
//
//	public void setSpecialDrugRequestOrder(
//			SpecialDrugRequestOrder specialDrugRequestOrder) {
//		this.specialDrugRequestOrder = specialDrugRequestOrder;
//		if (specialDrugRequestOrder != null)
//			this.setSdrOrderSeqno(specialDrugRequestOrder.getSdrOrderSeqno());
//	}

	@Column(name = "ALTERNATIVE_TREAMENT", length = 50)
	public String getAlternativeTreament() {
		return this.alternativeTreament;
	}

	public void setAlternativeTreament(String alternativeTreament) {
		this.alternativeTreament = alternativeTreament;
	}

	@Column(name = "DURATION", length = 50)
	public String getDuration() {
		return this.duration;
	}

	public void setDuration(String duration) {
		this.duration = duration;
	}

	@Column(name = "REASON", length = 50)
	public String getReason() {
		return this.reason;
	}

	public void setReason(String reason) {
		this.reason = reason;
	}

	@Column(name = "CREATED_BY", precision = 38, scale = 0)
	public long getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(long createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED_DATE", nullable = false)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Column(name = "UPDATED_BY", precision = 38, scale = 0)
	public long getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(long updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UPDATED_DATE", nullable = false)
	public Date getUpdatedDate() {
		return this.updatedDate;
	}

	public void setUpdatedDate(Date updatedDate) {
		this.updatedDate = updatedDate;
	}



	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SD_PATIENT_SEQNO")
	@JsonBackReference
	public SpecialDrugPatient getSpecialDrugPatient() {
		return specialDrugPatient;
	}

	public void setSpecialDrugPatient(SpecialDrugPatient specialDrugPatient) {
		this.specialDrugPatient = specialDrugPatient;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((alternativeTreament == null) ? 0 : alternativeTreament.hashCode());
		result = prime * result + ((duration == null) ? 0 : duration.hashCode());
		result = prime * result + ((reason == null) ? 0 : reason.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		SpecialDrugTreatment other = (SpecialDrugTreatment) obj;
		if (alternativeTreament == null) {
			if (other.alternativeTreament != null)
				return false;
		} else if (!alternativeTreament.equals(other.alternativeTreament))
			return false;
		if (duration == null) {
			if (other.duration != null)
				return false;
		} else if (!duration.equals(other.duration))
			return false;
		if (reason == null) {
			if (other.reason != null)
				return false;
		} else if (!reason.equals(other.reason))
			return false;
		return true;
	}
	
	
	
}
