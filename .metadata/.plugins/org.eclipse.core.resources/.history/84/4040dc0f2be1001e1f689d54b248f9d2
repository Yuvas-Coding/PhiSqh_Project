package my.com.cmg.iwp.maintenance.model;

// Generated May 29, 2012 4:37:05 PM by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;

/**
 * PhVotes generated by hbm2java
 */
@Entity
@Table(name = "t_vote_codes", uniqueConstraints = @UniqueConstraint(columnNames = {
		"vote_code", "facility_code"}))
public class VoteCode implements java.io.Serializable {
	private static final long serialVersionUID = 1301479303324502583L;
	private long voteSeqno = Long.MIN_VALUE;
	private VoteObject voteObject;
	private VoteActivity voteActivity;
	private VoteSubActivity voteSubActivity;
	private String voteCode;
	private String voteName;
	private BigDecimal voteBalance;
	private String voteStatus;
	private Character activeFlag = 'A';
	private long createdBy;
	private Date createdDate;
	private long updatedBy;
	private Date updatedDate;
	private Long budgetType;
	private transient Long requestedQty;
	private String ptjCode;
	private String facilityCode;
	private NePVote nePVote;
	
	private Character carryForward;



	private Set<CBMaster> currentBudgetMasters = new HashSet<CBMaster>(0);

	public VoteCode() {
	}

	public VoteCode(long voteSeqno, String voteCode, String voteName,
			long createdBy, Date createdDate, long updatedBy, Date updatedDate) {
		this.voteSeqno = voteSeqno;
		this.voteCode = voteCode;
		this.voteName = voteName;
		this.createdBy = createdBy;
		this.createdDate = createdDate;
		this.updatedBy = updatedBy;
		this.updatedDate = updatedDate;
	}

	public VoteCode(long voteSeqno, String voteCode, String voteName,
			BigDecimal voteBalance, String voteStatus, Character activeFlag,
			long createdBy, Date createdDate, long updatedBy, Date updatedDate) {
		this.voteSeqno = voteSeqno;
		this.voteCode = voteCode;
		this.voteName = voteName;
		this.voteBalance = voteBalance;
		this.voteStatus = voteStatus;
		this.activeFlag = activeFlag;
		this.createdBy = createdBy;
		this.createdDate = createdDate;
		this.updatedBy = updatedBy;
		this.updatedDate = updatedDate;
	}

	@Id
	@Column(name = "vote_seqno", unique = true, nullable = false)
	@SequenceGenerator(name = "voteCode_seqno", sequenceName = "t_vote_codes_seq", allocationSize = 1)
	@GeneratedValue(generator = "voteCode_seqno")
	public long getVoteSeqno() {
		return this.voteSeqno;
	}

	public void setVoteSeqno(long voteSeqno) {
		this.voteSeqno = voteSeqno;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "object_seqno")
	public VoteObject getVoteObject() {
		return this.voteObject;
	}

	public void setVoteActivity(VoteActivity voteActivity) {
		this.voteActivity = voteActivity;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "activity_seqno")
	public VoteActivity getVoteActivity() {
		return this.voteActivity;
	}

	public void setVoteObject(VoteObject voteObject) {
		this.voteObject = voteObject;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "sub_activity_seqno")
	public VoteSubActivity getVoteSubActivity() {
		return this.voteSubActivity;
	}

	public void setVoteSubActivity(VoteSubActivity voteSubActivity) {
		this.voteSubActivity = voteSubActivity;
	}

	@Column(name = "vote_code", unique = true, nullable = false, length = 33)
	public String getVoteCode() {
		return this.voteCode;
	}

	public void setVoteCode(String voteCode) {
		this.voteCode = voteCode;
	}

	@Column(name = "vote_name", nullable = false, length = 50)
	public String getVoteName() {
		return this.voteName;
	}

	public void setVoteName(String voteName) {
		this.voteName = voteName;
	}

	@Column(name = "vote_balance", precision = 15, scale = 4)
	public BigDecimal getVoteBalance() {
		return this.voteBalance;
	}

	public void setVoteBalance(BigDecimal voteBalance) {
		this.voteBalance = voteBalance;
	}

	@Column(name = "vote_status", length = 10)
	public String getVoteStatus() {
		return this.voteStatus;
	}

	public void setVoteStatus(String voteStatus) {
		this.voteStatus = voteStatus;
	}

	@Column(name = "active_flag")
	public Character getActiveFlag() {
		return this.activeFlag;
	}

	public void setActiveFlag(Character activeFlag) {
		this.activeFlag = activeFlag;
	}

	@Column(name = "created_by", nullable = false)
	public long getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(long createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_date", nullable = false, length = 29)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Column(name = "updated_by", nullable = false)
	public long getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(long updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_date", nullable = false, length = 29)
	public Date getUpdatedDate() {
		return this.updatedDate;
	}

	public void setUpdatedDate(Date updatedDate) {
		this.updatedDate = updatedDate;
	}

	@Column(name = "budget_type")
	public Long getBudgetType() {
		return budgetType;
	}

	public void setBudgetType(Long budgetType) {
		this.budgetType = budgetType;
	}

	@Transient
	public Long getRequestedQty() {
		return this.requestedQty;
	}

	public void setRequestedQty(Long requestedQty) {
		this.requestedQty = requestedQty;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "voteCode", cascade = CascadeType.ALL)
	public Set<CBMaster> getCurrentBudgetMasters() {
		return currentBudgetMasters;
	}

	public void setCurrentBudgetMasters(Set<CBMaster> currentBudgetMasters) {
		this.currentBudgetMasters = currentBudgetMasters;
	}

	@Column(name = "VOTE_PTJ_CODE", length = 15, nullable = false)
	public String getPtjCode() {
		return ptjCode;
	}

	public void setPtjCode(String ptjCode) {
		this.ptjCode = ptjCode;
	}

	@Column(name = "facility_code", length = 20, nullable = false)
	public String getFacilityCode() {
		return facilityCode;
	}

	public void setFacilityCode(String facilityCode) {
		this.facilityCode = facilityCode;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name="vot_seqno")
	public NePVote getNePVote() {
		return nePVote;
	}

	public void setNePVote(NePVote nePVote) {
		this.nePVote = nePVote;
	}
	


	@Column(name="carry_forward")
	public Character getCarryForward() {
		return carryForward;
	}

	public void setCarryForward(Character carryForward) {
		this.carryForward = carryForward;
	}

}